import { Noto_Sans } from "next/font/google";
import Header from "./components/header/header";
import "./globals.css";
import { UserProvider } from "./context/userInfo";
import { getServerSession } from "next-auth";
import { redirect } from "next/navigation";
import { headers } from "next/headers";

const geistSans = Noto_Sans({
  weight: ["100", "300", "400", "500", "600", "700", "800"],
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const getUserInfo = async (email) => {
  console.log("hi");
  const params = new URLSearchParams({
    email: email,
  });

  const response = await fetch(
    `${process.env.NEXT_PUBLIC_API_URL}/users?${params}`,
    {
      cache: "no-store",
    }
  );

  return await response.json();
};

export default async function RootLayout({ children }) {
  const headersList = await headers();
  const currentPath = headersList.get("next-url") || "/";
  const session = await getServerSession();
  let shouldRedirectToLogin = !session && currentPath !== "/login";
  let userProfile;

  if (shouldRedirectToLogin) {
    redirect("/login");
  }

  if (session) {
    userProfile = await getUserInfo(session.user.email);
  }

  return (
    <html lang="ko">
      <body className={geistSans.variable}>
        {shouldRedirectToLogin ? (
          <main>{children}</main>
        ) : (
          <UserProvider userProfile={userProfile}>
            <Header />
            <main>{children}</main>
          </UserProvider>
        )}
      </body>
    </html>
  );
}
